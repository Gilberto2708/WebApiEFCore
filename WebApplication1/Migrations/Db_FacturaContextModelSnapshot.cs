// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(Db_FacturaContext))]
    partial class Db_FacturaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Categorium", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__8A3D240C733E7519");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("WebApplication1.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellidos")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Ciudad")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Cp")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly?>("FechaAlta")
                        .HasColumnType("date");

                    b.Property<string>("Localidad")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Municipio")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Pais")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("RegimenFiscal")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Rfc")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("RFC");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdCliente")
                        .HasName("PK__Cliente__885457EE2155E23A");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.EstadoDocumento", b =>
                {
                    b.Property<int>("IdEstadoDocumento")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdEstadoDocumento")
                        .HasName("PK__EstadoDo__4989F2B7C43D736F");

                    b.ToTable("EstadoDocumento", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Factura", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<DateTime?>("FechaEmision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Folio")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstadoDocumento")
                        .HasColumnType("int");

                    b.Property<int>("IdFormaPago")
                        .HasColumnType("int");

                    b.Property<int>("IdMetodoPago")
                        .HasColumnType("int");

                    b.Property<int>("IdMoneda")
                        .HasColumnType("int");

                    b.Property<string>("Serie")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TotalDescuento")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TotalImpuestos")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdFactura")
                        .HasName("PK__Factura__50E7BAF1A8781B02");

                    b.HasIndex(new[] { "IdCliente" }, "IX_Factura_Cliente");

                    b.HasIndex(new[] { "IdEstadoDocumento" }, "IX_Factura_EstadoDocumento");

                    b.HasIndex(new[] { "IdFormaPago" }, "IX_Factura_FormaPago");

                    b.HasIndex(new[] { "IdMetodoPago" }, "IX_Factura_MetodoPago");

                    b.HasIndex(new[] { "IdMoneda" }, "IX_Factura_Moneda");

                    b.ToTable("Factura", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.FacturaDetalle", b =>
                {
                    b.Property<int>("IdFacturaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFacturaDetalle"));

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("IdFactura")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<decimal?>("Importe")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Iva")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("IVA");

                    b.Property<decimal?>("PrecioUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdFacturaDetalle")
                        .HasName("PK__FacturaD__3D8E1AB8805FFD78");

                    b.HasIndex(new[] { "IdFactura" }, "IX_FacturaDetalle_Factura");

                    b.HasIndex(new[] { "IdProducto" }, "IX_FacturaDetalle_Producto");

                    b.ToTable("FacturaDetalle", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.FormaPago", b =>
                {
                    b.Property<int>("IdFormaPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFormaPago"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FormaDePago")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdFormaPago")
                        .HasName("PK__FormaPag__C777CA683503716D");

                    b.ToTable("FormaPago", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Linea", b =>
                {
                    b.Property<int>("IdLinea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idLinea");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLinea"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdLinea")
                        .HasName("PK__Linea__4F210ABF8A578DAA");

                    b.ToTable("Linea", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.MetodoPago", b =>
                {
                    b.Property<int>("IdMetodoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMetodoPago"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdMetodoPago")
                        .HasName("PK__MetodoPa__6F49A9BE7192DD0A");

                    b.ToTable("MetodoPago", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Monedum", b =>
                {
                    b.Property<int>("IdMoneda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMoneda"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdMoneda")
                        .HasName("PK__Moneda__AA690671DECBEDF4");

                    b.ToTable("Moneda");
                });

            modelBuilder.Entity("WebApplication1.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("ClaveSat")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ClaveSAT");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<decimal?>("Costo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("EsProducto")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdLinea")
                        .HasColumnType("int");

                    b.Property<decimal?>("PrecioUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("UnidadSat")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("UnidadSAT");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__09889210038FC54E");

                    b.HasIndex(new[] { "IdCategoria" }, "IX_Producto_Categoria");

                    b.HasIndex(new[] { "IdLinea" }, "IX_Producto_Linea");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Factura", b =>
                {
                    b.HasOne("WebApplication1.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK_Factura_Cliente");

                    b.HasOne("WebApplication1.Models.EstadoDocumento", "IdEstadoDocumentoNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("IdEstadoDocumento")
                        .HasConstraintName("FK_Factura_EstadoDocumento");

                    b.HasOne("WebApplication1.Models.FormaPago", "IdFormaPagoNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("IdFormaPago")
                        .IsRequired()
                        .HasConstraintName("FK_Factura_FormaPago");

                    b.HasOne("WebApplication1.Models.MetodoPago", "IdMetodoPagoNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("IdMetodoPago")
                        .IsRequired()
                        .HasConstraintName("FK_Factura_MetodoPago");

                    b.HasOne("WebApplication1.Models.Monedum", "IdMonedaNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("IdMoneda")
                        .IsRequired()
                        .HasConstraintName("FK_Factura_Moneda");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdEstadoDocumentoNavigation");

                    b.Navigation("IdFormaPagoNavigation");

                    b.Navigation("IdMetodoPagoNavigation");

                    b.Navigation("IdMonedaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.FacturaDetalle", b =>
                {
                    b.HasOne("WebApplication1.Models.Factura", "IdFacturaNavigation")
                        .WithMany("FacturaDetalles")
                        .HasForeignKey("IdFactura")
                        .IsRequired()
                        .HasConstraintName("FK_FacturaDetalle_Factura");

                    b.HasOne("WebApplication1.Models.Producto", "IdProductoNavigation")
                        .WithMany("FacturaDetalles")
                        .HasForeignKey("IdProducto")
                        .IsRequired()
                        .HasConstraintName("FK_FacturaDetalle_Producto");

                    b.Navigation("IdFacturaNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.Producto", b =>
                {
                    b.HasOne("WebApplication1.Models.Categorium", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .IsRequired()
                        .HasConstraintName("FK_Producto_Categoria");

                    b.HasOne("WebApplication1.Models.Linea", "IdLineaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdLinea")
                        .IsRequired()
                        .HasConstraintName("FK_Producto_Linea");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdLineaNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.Categorium", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("WebApplication1.Models.Cliente", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("WebApplication1.Models.EstadoDocumento", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("WebApplication1.Models.Factura", b =>
                {
                    b.Navigation("FacturaDetalles");
                });

            modelBuilder.Entity("WebApplication1.Models.FormaPago", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("WebApplication1.Models.Linea", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("WebApplication1.Models.MetodoPago", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("WebApplication1.Models.Monedum", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("WebApplication1.Models.Producto", b =>
                {
                    b.Navigation("FacturaDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
